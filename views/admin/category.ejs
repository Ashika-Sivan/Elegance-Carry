<%- include("../../views/layouts/admin/header") %>


  <style>
    /* Base Styles */
    .content-main {
      margin-left: 250px;
      padding: 20px;
      transition: margin-left 0.3s ease;
    }

    .content-header {
      margin-bottom: 20px;
    }

    .content-title {
      font-size: 24px;
      margin-bottom: 10px;
    }

    .col-md-3 {
      padding: 15px;
      border: 1px solid #ddd;
      border-radius: 10px;
      background-color: #fff;
      margin-bottom: 20px;
    }

    .form-label {
      margin-bottom: 8px;
      font-weight: 500;
    }

    .form-control {
      width: 100%;
      padding: 8px;
      margin-bottom: 10px;
      border: 1px solid #ccc;
      border-radius: 5px;
      box-sizing: border-box;
    }

    .d-grid {
      margin-top: 15px;
    }

    .btn-primary {
      background-color: #007bff;
      color: #fff;
      border: 1px solid #007bff;
      border-radius: 5px;
      padding: 8px;
      width: 100%;
    }

    .btn-primary:hover {
      background-color: #0056b3;
      border-color: #0056b3;
    }

    .table-responsive {
      overflow-x: auto;
    }

    .table th,
    .table td {
      vertical-align: middle;
      padding: 8px;
    }

    .badge {
      color: white;
      min-width: 60px;
      display: inline-block;
      text-align: center;
      padding: 5px;
    }

    .error-message {
      color: red;
      font-size: 12px;
      margin-top: 5px;
    }

    .pagination-container {
      display: flex;
      justify-content: center;
      align-items: center;
      gap: 8px;
      margin-top: 20px;
    }

    .pagination-container a,
    .pagination-container .current-page {
      padding: 6px 12px;
      text-decoration: none;
      border: 1px solid #ddd;
      border-radius: 5px;
      color: #333;
      background-color: #f9f9f9;
      transition: all 0.3s ease;
    }

    .pagination-container a:hover {
      background-color: #007bff;
      color: white;
      border-color: #007bff;
    }

    .pagination-container .current-page {
      font-weight: bold;
      background-color: #007bff;
      color: white;
      border-color: #007bff;
      cursor: default;
    }

    /* Responsive Adjustments */
    @media (max-width: 1024px) {
      .content-main {
        margin-left: 0;
      }

      .input-group {
        width: 100% !important;
        margin-left: 0 !important;
      }
    }

    @media (max-width: 768px) {
      .content-title {
        font-size: 20px;
      }

      .col-md-3 {
        padding: 10px;
      }

      .form-control,
      .btn-primary {
        font-size: 14px;
      }

      .table {
        font-size: 14px;
      }

      .badge,
      .btn-info,
      .btn-danger,
      .btn-success {
        font-size: 12px;
        padding: 5px 8px;
        min-width: 80px;
      }
    }

    @media (max-width: 576px) {
      .content-main {
        padding: 10px;
      }

      .content-title {
        font-size: 18px;
      }

      .form-control,
      .btn-primary {
        font-size: 12px;
      }

      .table {
        font-size: 12px;
      }

      .badge,
      .btn-info,
      .btn-danger,
      .btn-success {
        font-size: 10px;
        padding: 4px 6px;
        min-width: 60px;
      }

      .pagination-container a,
      .pagination-container .current-page {
        padding: 5px 8px;
        font-size: 12px;
      }
    }
  </style>

<body>
  <section class="content-main">
    <div class="content-header">
      <h2 class="content-title card-title">Category</h2>
    </div>
    <header class="card-header text-center mb-4">
      <form action="/admin/category/" method="get" class="d-inline" id="searchForm">
        <div class="input-group input-group-sm border border-1 border-grey rounded-pill">
          <input 
            type="text" 
            class="form-control border-0 rounded-pill mt-1" 
            placeholder="Search categories" 
            name="search"
            id="searchInput"
            value="<%= searchQuery %>"
            oninput="handleSearch(this)"
          />
          <button class="btn" type="submit">Search</button>
        </div>
      </form>
    </header>
    <div class="card">
      <div class="card-body">
        <div class="row">
          <div class="col-md-3 col-12">
            <form method="post" action="/admin/addCategory" onsubmit="handleFormSubmit(event)">
              <div class="mb-4">
                <label for="product_name" class="form-label">Name</label>
                <input type="text" name="name" placeholder="Type here" class="form-control" id="product_name" required/>
                <div id="name-error" class="error-message"></div>
              </div>
              <div class="mb-4">
                <label class="form-label">Description</label>
                <textarea placeholder="Type here" name="description" class="form-control" id="descriptionId" required></textarea>
                <div id="description-error" class="error-message"></div>
              </div>
              <div class="d-grid">
                <button class="btn btn-primary" type="submit">Create category</button>
              </div>
            </form>
          </div>
          <div class="col-md-9 col-12">
            <div class="table-responsive">
              <table class="table table-hover">
                <thead>
                  <tr>
                    <th class="text-center">No</th>
                    <th>Name</th>
                    <th>Description</th>
                    <th>Offer Price</th>
                    <th>Offer</th>
                    <th>Status</th>
                    <th>List/Unlist</th>
                    <th class="text-start">Edit</th>
                  </tr>
                </thead>
                <tbody>
                  <% cat.reverse().forEach((category, index) => { %>
                    <tr>
                      <td class="text-center"><%= index + 1 %></td>
                      <td class="text-start"><%= category.name %></td>
                      <td class="text-start"><%= category.description %></td>
                      <td>
                        <% if(category.categoryOffer) { %>
                          <%= category.categoryOffer %>
                        <% } else { %>
                          0%
                        <% } %>
                      </td>
                      <td class="text-start">
                        <% if(category.categoryOffer === 0) { %>
                          <button class="btn btn-info" style="height: 38px; width: 87px;font-size: 10px;">
                            <a href="#" class="text-white" onclick="addOffer('<%= category._id %>')">Add Offer</a>
                          </button>
                        <% } else { %>
                          <button class="btn btn-info">
                            <a href="#" class="text-white" onclick="removeOffer('<%= category._id %>')">Remove</a>
                          </button>
                        <% } %>
                      </td>
                      <td class="text-start">
                        <% if(category.isListed) { %>
                          <span class="badge rounded-pill bg-success">Listed</span>
                        <% } else { %>
                          <span class="badge rounded-pill bg-danger">Unlisted</span>
                        <% } %>
                      </td>
                      <td class="text-start">
                        <% if(category.isListed) { %>
                          <button class="btn btn-danger" onclick="confirmList('<%= category._id %>', 'unlist')">
                            Unlist
                          </button>
                        <% } else { %>
                          <button class="btn btn-success" onclick="confirmList('<%= category._id %>', 'list')">
                            List
                          </button>
                        <% } %>
                      </td>
                      <td class="text-start">
                        <a href="/admin/editCategory?id=<%= category._id %>" class="btn btn-info text-white">Edit</a>
                      </td>
                    </tr>
                  <% }) %>
                </tbody>
              </table>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div class="pagination-container">
      <% if (currentPage > 1) { %>
        <a href="?page=1<%= searchQuery ? '&search=' + searchQuery : '' %>">«« First</a>
        <a href="?page=<%= currentPage - 1 %><%= searchQuery ? '&search=' + searchQuery : '' %>">« Previous</a>
      <% } %>
      <% for (let i = 1; i <= totalPages; i++) { %>
        <% if (i === currentPage) { %>
          <span class="current-page"><%= i %></span>
        <% } else { %>
          <a href="?page=<%= i %><%= searchQuery ? '&search=' + searchQuery : '' %>"><%= i %></a>
        <% } %>
      <% } %>
      <% if (currentPage < totalPages) { %>
        <a href="?page=<%= currentPage + 1 %><%= searchQuery ? '&search=' + searchQuery : '' %>">Next »</a>
      <% } %>
    </div>
  </section>

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@10/dist/sweetalert2.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
  <script>
    // Sidebar toggle (assuming header.ejs has a hamburger menu)
    document.querySelector('.hamburger')?.addEventListener('click', function() {
      const sidebar = document.querySelector('.navbar-aside');
      if (sidebar) {
        sidebar.classList.toggle('active');
        const contentMain = document.querySelector('.content-main');
        contentMain.style.marginLeft = sidebar.classList.contains('active') ? '250px' : '0';
      }
    });

    // Category Management Scripts
    async function confirmList(categoryId, action) {
      const url = action === 'unlist' ? '/admin/listCategory' : '/admin/unlistCategory';
      const actionText = action === 'unlist' ? 'unlist' : 'list';

      Swal.fire({
        title: `Are you sure?`,
        text: `Do you want to ${actionText} this category?`,
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#3085d6',
        cancelButtonColor: '#d33',
        confirmButtonText: `Yes, ${actionText} it!`
      }).then(async (result) => {
        if (result.isConfirmed) {
          try {
            const response = await fetch(url, {
              method: 'PATCH',
              headers: { 'Content-Type': 'application/json' },
              body: JSON.stringify({ id: categoryId })
            });
            if (response.ok) {
              Swal.fire(
                `${actionText.charAt(0).toUpperCase() + actionText.slice(1)}ed!`,
                `The category has been ${actionText}ed.`,
                'success'
              ).then(() => location.reload());
            } else {
              throw new Error('Request failed');
            }
          } catch (error) {
            Swal.fire('Error!', 'There was a problem processing your request.', 'error');
          }
        }
      });
    }

    function handleFormSubmit(event) {
      event.preventDefault();
      if (!validateForm()) return;
      const name = document.getElementsByName("name")[0].value.trim();
      const description = document.getElementById("descriptionId").value.trim();
      fetch('/admin/addCategory', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ name, description })
      })
      .then(response => {
        if (!response.ok) {
          return response.json().then(err => { throw new Error(err.error); });
        }
        return response.json();
      })
      .then(data => location.reload())
      .catch(error => {
        if (error.message === "Category already exist") {
          Swal.fire({ icon: 'error', title: "Oops", text: "Category already exists" });
        } else {
          Swal.fire({ icon: "error", title: "Oops", text: "An error occurred while adding the category" });
        }
      });
    }

    function validateForm() {
      clearErrorMessages();
      const name = document.getElementsByName("name")[0].value.trim();
      const description = document.getElementById("descriptionId").value.trim();
      let isValid = true;

      if (name === "") {
        displayErrorMessage("name-error", "Please enter name");
        isValid = false;
      } else if (!/^[a-zA-Z\s]+$/.test(name)) {
        displayErrorMessage("name-error", "Category name should only contain alphabetic characters");
        isValid = false;
      }
      if (description === "") {
        displayErrorMessage("description-error", "Please enter a description");
        isValid = false;
      }
      return isValid;
    }

    function displayErrorMessage(elementId, message) {
      const errorElement = document.getElementById(elementId);
      errorElement.innerText = message;
      errorElement.style.display = "block";
    }

    function clearErrorMessages() {
      const errorElements = document.getElementsByClassName("error-message");
      Array.from(errorElements).forEach(element => {
        element.innerText = "";
        element.style.display = "none";
      });
    }

    async function addOffer(categoryId) {
      const { value: amount } = await Swal.fire({
        title: "Offer in percentage",
        input: "number",
        inputLabel: "Percentage",
        inputPlaceholder: "%",
        showCancelButton: true,
        cancelButtonText: "Cancel",
        confirmButtonText: "Add Offer",
        confirmButtonColor: '#3085d6',
        cancelButtonColor: '#d33'
      });

      if (amount) {
        try {
          const response = await fetch("/admin/addCategoryOffer", {
            method: "POST",
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ percentage: amount, categoryId })
          });
          const data = await response.json();
          if (response.ok && data.status) {
            Swal.fire("Offer added", "The offer has been added", "success").then(() => location.reload());
          } else {
            Swal.fire("Failed", data.message || "Adding offer failed", "error");
          }
        } catch (error) {
          Swal.fire("Error", "An error occurred while adding the offer", "error");
        }
      }
    }

    async function removeOffer(categoryId) {
      try {
        const response = await fetch("/admin/removeCategoryOffer", {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ categoryId })
        });
        const data = await response.json();
        if (response.ok && data.status) {
          Swal.fire("Offer removed", "The offer has been removed", "success").then(() => location.reload());
        } else {
          Swal.fire("Failed", data.message || "Removing offer failed", "error");
        }
      } catch (error) {
        Swal.fire("Error", "An error occurred while removing the offer", "error");
      }
    }

    function handleSearch(input) {
      if (!input.value.trim()) {
        window.location.href = '/admin/category';
        return;
      }
      clearTimeout(input.timer);
      input.timer = setTimeout(() => {
        document.getElementById('searchForm').submit();
      }, 500);
    }
  </script>
  <%- include("../../views/layouts/admin/footer") %>
</body>
</html>