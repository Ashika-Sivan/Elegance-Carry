<%- include("../../views/layouts/admin/header") %>
<head>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@10/dist/sweetalert2.min.css"/>
  <style>
    .col-md-3 {
      padding: 20px;
      border: 1px solid #ddd;
      border-radius: 10px;
      margin: 10px;
    }
    .content-main{
        margin-left: 300px
    }

    .form-label {
      margin-bottom: 8px;
    }

    .pagination-container {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 8px;
    margin-top: 20px;
}

.pagination-container a,
.pagination-container .current-page {
    padding: 8px 12px;
    text-decoration: none;
    border: 1px solid #ddd;
    border-radius: 5px;
    color: #333;
    background-color: #f9f9f9;
    transition: all 0.3s ease;
}

.pagination-container a:hover {
    background-color: #007bff;
    color: white;
    border-color: #007bff;
}

.pagination-container .current-page {
    font-weight: bold;
    background-color: #007bff;
    color: white;
    border-color: #007bff;
    cursor: default;
}


    .form-control {
      width: 100%;
      padding: 8px;
      margin-bottom: 10px;
      border: 1px solid #ccc;
      border-radius: 5px;
      box-sizing: border-box;
    }

    .d-grid {
      margin-top: 20px;
    }

    .btn-primary {
      background-color: #007bff;
      color: #fff;
      border: 1px solid #007bff;
      border-radius: 5px;
      padding: 10px 20px;
      cursor: pointer;
    }

    .btn-primary:hover {
      background-color: #0056b3;
      border-color: #0056b3;
    }

    .pagination-container {
      text-align: center;
    }

    .pagination {
      display: inline-block;
    }

    .pagination a,
    .pagination .current-page {
      display: inline-block;
      padding: 5px 10px;
      margin: 0 2px;
      border: 1px solid #ddd;
      text-decoration: none;
      color: #333;
    }

    .pagination a:hover {
      background-color: #f5f5f5;
    }

    .error-message {
      color: red;
    }
    .badge{
      color:white
    }
  </style>
</head>
<body>

  <section class="content-main">
    <div class="content-header">
        <div>
            <h2 class="content-title card-title">Category</h2>
        </div>
    </div>
    <header class="card-header text-center mb-20">
        <form action="/admin/category/" method="get" class="d-inline" id="searchForm">
            <div class="input-group input-group-sm border border-1 border-grey rounded-pill" style="width: 500px; margin-left: 230px">
                <input 
                    type="text" 
                    class="form-control border-0 rounded-pill mt-3" 
                    placeholder="Search categories" 
                    name="search"
                    id="searchInput"
                    value="<%= searchQuery %>"
                    oninput="handleSearch(this)"
                />
                <button class="btn" type="submit">Search</button>
            </div>
        </form>
    </header>
    <div class="card">
        <div class="card-body">
            <div class="row">
                <div class="col-md-3">
                    <form method="post" action="/admin/addCategory" onsubmit="handleFormSubmit(event)">
                        <div class="mb-4">
                            <label for="product_name" class="form-label">Name</label>
                            <input type="text" name="name" placeholder="Type here" class="form-control" id="product_name" required/>
                            <div id="name-error" class="error-message"></div>
                        </div>
                        <div class="mb-4">
                            <label class="form-label">Description</label>
                            <textarea placeholder="Type here" name="description" class="form-control" id="descriptionId" required></textarea>
                            <div id="description-error" class="error-message"></div>
                        </div>
                        <div class="d-grid">
                            <button class="btn btn-primary" type="submit">Create category</button>
                        </div>
                    </form>
                </div>
                <div class="col-md-8 ml-10">
                    <div class="table-responsive">
                        <table class="table table-hover">
                            <thead>
                                <tr>
                                    <th class="text-center">no</th>
                                    <th>Name</th>
                                    <th>Description</th>
                                    <th>offer price</th>
                                    <th>offer</th>
                                    <th>Status</th>
                                    <th>List/Unlist</th>
                                    <th class="text-start">Edit</th>
                                </tr>
                            </thead>
                            <tbody>
                                <% cat.reverse().forEach((category, index) => { %>
                                    <tr>
                                        <td><%= index + 1 %></td>
                                        <td class="text-start"><%= category.name %></td>
                                        <td class="text-start"><%= category.description %></td>
                                        <td>
                                            <% if(category.categoryOffer) { %>
                                                <%= category.categoryOffer %>
                                            <% } else { %>
                                                0%
                                            <% } %>
                                        </td>
                                        <td class="text-start">
                                            <% if(category.categoryOffer === 0) { %>
                                                <button class="btn btn-info" style="width: 100px">
                                                    <a href="#" class="text-white" onclick="addOffer('<%= category._id %>')">Add Offer</a>
                                                </button>
                                            <% } else { %>
                                                <button class="btn btn-info" style="width: 100px">
                                                    <a href="#" class="text-white" onclick="removeOffer('<%= category._id %>')">Remove</a>
                                                </button>
                                            <% } %>
                                        </td>
                                        <td class="text-start">
                                            <% if(category.isListed) { %>
                                                <span class="badge rounded-pill bg-success" style="width: 60px">Listed</span>
                                            <% } else { %>
                                                <span class="badge rounded-pill bg-danger" style="width: 60px">Unlisted</span>
                                            <% } %>
                                        </td>
                                        <td class="text-start">
                                            <% if(category.isListed) { %>
                                                <button class="btn btn-danger" style="width: 70px"
                                                    onclick="confirmList('<%= category._id %>', 'unlist')">
                                                    Unlist
                                                </button>
                                            <% } else { %>
                                                <button class="btn btn-success" style="width: 70px"
                                                    onclick="confirmList('<%= category._id %>', 'list')">
                                                    List
                                                </button>
                                            <% } %>
                                        </td>
                                        <td class="text-start">
                                            <a href="/admin/editCategory?id=<%= category._id %>" class="btn btn-info text-white">Edit</a>
                                        </td>
                                    </tr>
                                <% }) %>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="pagination-container">
        <% if (currentPage > 1) { %>
            <a href="?page=<%= currentPage - 1 %><%= searchQuery ? '&search=' + searchQuery : '' %>">« Previous</a>
        <% } %>
        <% for (let i = 1; i <= totalPages; i++) { %>
            <% if (i === currentPage) { %>
                <span class="current-page"><%= i %></span>
            <% } else { %>
                <a href="?page=<%= i %><%= searchQuery ? '&search=' + searchQuery : '' %>"><%= i %></a>
            <% } %>
        <% } %>
        <% if (currentPage < totalPages) { %>
            <a href="?page=<%= currentPage + 1 %><%= searchQuery ? '&search=' + searchQuery : '' %>">Next »</a>
        <% } %>
    </div>
</section>

<script>
async function confirmList(categoryId, action) {
    const url = action === 'unlist' ? '/admin/listCategory' : '/admin/unlistCategory';
    const actionText = action === 'unlist' ? 'unlist' : 'list';

    Swal.fire({
        title: `Are you sure?`,
        text: `Do you want to ${actionText} this category?`,
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#3085d6',
        cancelButtonColor: '#d33',
        confirmButtonText: `Yes, ${actionText} it!`
    }).then(async (result) => {
        if (result.isConfirmed) {
            try {
                const response = await fetch(url, {
                    method: 'PATCH',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ id: categoryId })
                });

                if (response.ok) {
                    Swal.fire(
                        `${actionText.charAt(0).toUpperCase() + actionText.slice(1)}ed!`,
                        `The category has been ${actionText}ed.`,
                        'success'
                    ).then(() => {
                        location.reload(); // Refresh to show updated status
                    });
                } else {
                    throw new Error('Request failed');
                }
            } catch (error) {
                Swal.fire(
                    'Error!',
                    'There was a problem processing your request.',
                    'error'
                );
            }
        }
    });
}
</script>
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@10/dist/sweetalert2.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>


<script>
    function handleFormSubmit(event){
        event.preventDefault();
        if(!validateForm()){
            return; 
        }
        const name=document.getElementsByName("name")[0].value.trim();
        const description=document.getElementById("descriptionId").value;
        fetch('/admin/addCategory',{
            method:'POST',
            headers:{
                'content-type':'application/json'

            },
            body:JSON.stringify({name,description})
        })
        .then(response=>{
            if(!response.ok){
                return response.json().then(err=>{
                    throw new Error(err.error);
                })
            }
            return response.json();
        })
        .then(data=>{
            location.reload();
        })
        .catch(error=>{
          console.log("Error caught",error.message);
          
            if(error.message ==="Category already exist"){
                Swal.fire({
                    icon:'error',
                    title:"Oops",
                    text:"Category already exists"
                })
            }else{
                Swal.fire({
                    icon:"error",
                    title:"Oops",
                    text:"An error occoured while adding the category"
                })
            }
        })
    }
  

    function validateForm(){
        clearErrorMessages();
        const name=document.getElementsByName("name")[0].value.trim();
        const description=document.getElementById("descriptionId").value.trim()
        isValid=true


        if(name===""){
            displayErrorMessage("name-error","please enter name")
                isValid =false//if person doesnt
            
        }else if(!/^[a-zA-Z\s]+$/.test(name)){
            displayErrorMessage("name-error","Category name should only alphabetic characters")
            isValid=false;

        }
        if(description ===""){
            displayErrorMessage("description-error","please enter a description")
            isValid=false
        }
        return isValid;
    }

    function displayErrorMessage(elementId,message){
        var errorElement=document.getElementById(elementId);
        errorElement.innerText=message;
        errorElement.style.display="block"
    }

    function clearErrorMessages(){
        const errorElements=document.getElementsByClassName("error-message");
        Array.from(errorElements).forEach((element)=>{
            element.innerText="";
            element.style.display="none"
        });

    }
 async function addOffer(categoryId){
  const {value:amount}=await Swal.fire({
    title:"Offer in percentage",
    input:"number",
    inputLabel:"percentage",
    inputPlaceholder:"%",
  });

  if(amount){
    try {
      const response=await fetch("/admin/addCategoryOffer",{
        method:"POST",
        headers:{
          'content-type':'application/json',
        },
        body:JSON.stringify({
          percentage:amount,
          categoryId:categoryId,

        }),

      })
      const data=await response.json();
      if(response.ok && data.status===true){
        Swal.fire(
          "Offer added",
          "The offer has been added",
          "success"
        ).then(()=>{
          location.reload();
        })
      }else{
        Swal.fire("failed to locate",data.message||"Adding offer failed","error");
      }
      
    } catch (error) {
      Swal.fire(
        "Error",
        "An error occoured while adding the offer ",
        "error"
      );
      console.log("Error adding offer",error);
    }
  }
 }
async function removeOffer(categoryId){
  try {
    const response=await fetch("/admin/removeCategoryOffer",{
      method:'POST',
      headers:{
        'content-type':'application/json',
        
      },body:JSON.stringify({
        categoryId:categoryId
      })

    })

    const data=await response.json();
    if(response.ok && data.status===true){
      Swal.fire(
        "Offer removed",
        "The offer has been removed",
        "success"
      ).then(()=>{
        location.reload();             //reload the current page
      });
    }else{
      Swal.fire("Failed",data.message|| "removing offer failed","error")
    }
    
  } catch (error) {
    Swal.fire(
      "Error",
      "an error occoured while removing the offer",
      "error"
    );
    console.error("Error removing offer",error);
    
    
  }
}

    function handleSearch(input) {
        // If the input is empty, redirect to the base category page
        if (!input.value.trim()) {
            window.location.href = '/admin/category';
            return;
        }
        
        // If user has typed something, wait briefly before submitting
        clearTimeout(input.timer);
        input.timer = setTimeout(() => {
            document.getElementById('searchForm').submit();
        }, 500);
    }



</script>







<%- include("../../views/layouts/admin/footer") %>

