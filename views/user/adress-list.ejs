<%- include("../layouts/user/header.ejs") %>

<style>
    /* Container for Sidebar and Address List */
    .container {
        display: flex;
        max-width: 1200px;
        margin: 20px auto;
        gap: 20px;
        padding: 0 15px;
    }

    /* Address Container */
    .address-container {
        flex: 1;
        padding: 20px;
        background-color: #fff;
    }

    /* Header Section */
    .header-section {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 20px;
    }

    /* Page Title */
    .page-title {
        color: #282c3f;
        font-size: 1.8rem;
        font-weight: 600;
        padding-bottom: 10px;
        border-bottom: 1px solid #eaeaec;
        position: relative;
    }

    .page-title::after {
        content: '';
        width: 50px;
        height: 3px;
        background: #ff3f6c;
        position: absolute;
        bottom: -1px;
        left: 0;
        border-radius: 2px;
    }

    /* Add Address Button */
    .add-address-btn {
        background: linear-gradient(90deg, #ff3f6c 0%, #ff5a82 100%);
        color: white;
        font-size: 14px;
        font-weight: 600;
        padding: 10px 15px;
        border-radius: 6px;
        border: none;
        cursor: pointer;
        transition: all 0.3s ease;
        text-transform: uppercase;
    }

    .add-address-btn:hover {
        background: linear-gradient(90deg, #e6365d 0%, #e64e73 100%);
        transform: translateY(-2px);
        box-shadow: 0 4px 10px rgba(255, 63, 108, 0.2);
    }

    /* Address List */
    .address-list {
        display: flex;
        flex-direction: column;
        gap: 20px;
    }

    /* Address Card */
    .address-card {
        background: #fff;
        padding: 20px;
        border-radius: 8px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
        border: 1px solid #eaeaec;
        transition: all 0.3s ease;
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .address-card:hover {
        transform: translateY(-3px);
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
    }

    /* Address Info */
    .address-info {
        flex: 1;
    }

    .address-name {
        font-size: 18px;
        font-weight: 600;
        color: #282c3f;
        margin-bottom: 5px;
    }

    .address-details {
        font-size: 14px;
        color: #666;
        line-height: 1.5;
    }

    .address-phone {
        font-size: 14px;
        color: #777;
    }

    /* Action Buttons */
    .address-actions {
        display: flex;
        gap: 10px;
    }

    .address-actions button {
        border: none;
        padding: 8px 12px;
        font-size: 14px;
        cursor: pointer;
        border-radius: 6px;
        transition: all 0.3s ease;
        font-weight: 500;
    }

    .edit {
        background: #007bff;
        color: white;
    }

    .edit:hover {
        background: #0056b3;
        transform: translateY(-1px);
        box-shadow: 0 2px 5px rgba(0, 123, 255, 0.2);
    }

    .delete {
        background: #dc3545;
        color: white;
    }

    .delete:hover {
        background: #b52a35;
        transform: translateY(-1px);
        box-shadow: 0 2px 5px rgba(220, 53, 69, 0.2);
    }

    /* No Address Message */
    .no-address {
        text-align: center;
        color: #666;
        font-size: 16px;
        padding: 20px;
    }

    /* Responsive Design */
    @media (max-width: 1024px) {
        .container {
            flex-direction: column;
        }

        .address-container {
            margin-left: 0;
            padding: 15px;
        }
    }

    @media (max-width: 768px) {
        .page-title {
            font-size: 1.5rem;
        }

        .address-card {
            flex-direction: column;
            align-items: flex-start;
        }

        .address-info {
            margin-bottom: 10px;
        }

        .address-name {
            font-size: 16px;
        }

        .address-details {
            font-size: 13px;
        }

        .address-phone {
            font-size: 13px;
        }

        .address-actions {
            width: 100%;
            justify-content: flex-start;
        }

        .address-actions button {
            padding: 6px 10px;
            font-size: 13px;
        }

        .add-address-btn {
            font-size: 13px;
            padding: 8px 12px;
        }
    }

    @media (max-width: 480px) {
        .page-title {
            font-size: 1.3rem;
        }

        .page-title::after {
            width: 40px;
        }

        .address-card {
            padding: 15px;
        }

        .address-name {
            font-size: 14px;
        }

        .address-details {
            font-size: 12px;
        }

        .address-phone {
            font-size: 12px;
        }

        .address-actions button {
            padding: 5px 8px;
            font-size: 12px;
        }

        .add-address-btn {
            font-size: 12px;
            padding: 6px 10px;
        }

        .no-address {
            font-size: 14px;
            padding: 15px;
        }
    }
</style>

<div style="margin-bottom: 10rem;">
    <div class="container">
        <%- include("../layouts/user/sidebar.ejs") %>

        <div class="address-container">
            <div class="header-section">
                <h3 class="page-title">My Saved Addresses</h3>
                <button class="add-address-btn" onclick="location.href='/addAddress'">+ Add Address</button>
            </div>

            <div class="address-list">
                <% if (addresses && addresses.length > 0) { %>
                    <% addresses.forEach((address) => { %>
                        <div class="address-card">
                            <div class="address-info">
                                <h4 class="address-name">
                                    <%= address.name %>
                                </h4>
                                <p class="address-details">
                                    <strong>
                                        <%= address.addressType %>
                                    </strong> | <%= address.city %>, <%= address.state %> - <%= address.pincode %> <br>
                                    Landmark: <%= address.landMark %>
                                </p>
                                <p class="address-phone">Phone: <%= address.phone %> | Alternate: <%= address.altPhone %>
                                </p>
                            </div>
                            <div class="address-actions">
                                <button class="edit" onclick="editAddress('<%= address._id %>')">Edit</button>
                                <button class="delete" onclick="deleteAddress('<%= address._id %>')">Delete</button>
                            </div>
                        </div>
                    <% }); %>
                <% } else { %>
                    <p class="no-address">No saved addresses yet. Add a new one below!</p>
                <% } %>
            </div>
        </div>
    </div>
</div>

<script>
    function editAddress(id) {
        window.location.href = `/editAddress?id=${id}`;
    }

    function deleteAddress(id) {
        if (!id || id.trim() === '') {
            Swal.fire({
                title: 'Error!',
                text: 'Invalid address ID',
                icon: 'error'
            });
            return;
        }

        Swal.fire({
            title: 'Are you sure?',
            text: "Do you really want to delete this address?",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#d33',
            cancelButtonColor: '#3085d6',
            confirmButtonText: 'Yes, delete it!',
            cancelButtonText: 'Cancel'
        }).then((result) => {
            if (result.isConfirmed) {
                Swal.fire({
                    title: 'Deleting...',
                    text: 'Please wait while we delete the address',
                    allowOutsideClick: false,
                    showConfirmButton: false,
                    willOpen: () => {
                        Swal.showLoading();
                    }
                });

                fetch(`/deleteAddress/${id}`, {
                    method: 'DELETE',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    }
                })
                .then(response => {
                    if (!response.ok) {
                        throw new Error(`HTTP error! status: ${response.status}`);
                    }
                    return response.json();
                })
                .then(data => {
                    if (data.success) {
                        Swal.fire({
                            title: 'Deleted!',
                            text: data.message || 'The address has been deleted.',
                            icon: 'success',
                            timer: 1500,
                            showConfirmButton: false
                        }).then(() => {
                            location.reload();
                        });
                    } else {
                        Swal.fire({
                            title: 'Error!',
                            text: data.message || 'Failed to delete address',
                            icon: 'error',
                            confirmButtonText: 'OK'
                        });
                    }
                })
                .catch(err => {
                    console.error("Error deleting address:", err);
                    Swal.fire({
                        title: 'Error!',
                        text: 'Something went wrong while deleting the address. Please try again.',
                        icon: 'error',
                        confirmButtonText: 'OK'
                    });
                });
            }
        });
    }
</script>

<%- include("../layouts/user/footer.ejs") %>