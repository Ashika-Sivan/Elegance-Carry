<%- include("../layouts/user/header.ejs") %>

<link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;500;700&display=swap" rel="stylesheet">
<style>
    body {
        font-family: 'Roboto', sans-serif;
        margin: 0;
        padding: 0;
        background-color: #f4f7fa;
    }

    /* Container for Sidebar and Main Content */
    .container-wrapper {
        display: flex;
        max-width: 1400px;
        margin: 20px auto;
        gap: 20px;
        padding: 0 15px;
    }

    /* Main Content */
    .main-content {
        flex: 1;
    }

    .container {
        display: flex;
        flex-wrap: wrap;
        gap: 20px;
    }

    .wallet-section, .add-funds-section {
        background-color: #fff;
        padding: 20px;
        border-radius: 8px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
        flex: 1;
        min-width: 300px;
    }

    h2, h3 {
        margin-top: 0;
    }

    .wallet-overview {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 20px;
    }

    .wallet-info {
        font-size: 24px;
    }

    .wallet-actions {
        display: flex;
        gap: 10px;
    }

    .button {
        padding: 10px 20px;
        font-size: 16px;
        border: none;
        border-radius: 5px;
        cursor: pointer;
        background-color: #ff3f6c;
        color: white;
        transition: background-color 0.3s;
    }

    .button:hover {
        background-color: #e6365d;
    }

    .button-secondary {
        background-color: #6c757d;
    }

    .button-secondary:hover {
        background-color: #5a6268;
    }

    /* Add Funds Form Styles */
    .form-group {
        margin-bottom: 15px;
    }

    label {
        display: block;
        font-weight: bold;
        margin-bottom: 5px;
    }

    input[type="number"] {
        width: 100%;
        padding: 8px;
        border: 1px solid #ccc;
        border-radius: 5px;
        font-size: 14px;
    }

    .payment-options label {
        font-weight: normal;
        margin: 5px 0;
        display: block;
    }

    .error-message {
        background-color: #f8d7da;
        color: #721c24;
        padding: 10px;
        border-radius: 5px;
        margin-bottom: 10px;
        text-align: center;
    }

    /* Transactions Table */
    .transactions-table-container {
        overflow-x: auto;
    }

    .transactions-table {
        width: 100%;
        border-collapse: collapse;
        margin-top: 20px;
    }

    .transactions-table th,
    .transactions-table td {
        padding: 12px;
        text-align: left;
    }

    .transactions-table th {
        background-color: #f1f1f1;
    }

    .transaction-type {
        color: #28a745; /* Green for credit */
    }

    .transaction-type-negative {
        color: #dc3545; /* Red for debit */
    }

    .active-page {
        background-color: #333;
        color: white;
        pointer-events: none;
    }

    footer {
        background-color: #333;
        color: #fff;
        padding: 10px;
        text-align: center;
        width: 100%;
    }

    /* Responsive Styles */
    @media (max-width: 1024px) {
        .container-wrapper {
            flex-direction: column;
        }

        .main-content {
            margin-left: 0;
        }
    }

    @media (max-width: 768px) {
        .container {
            flex-direction: column;
        }

        .wallet-section, .add-funds-section {
            padding: 15px;
        }

        .wallet-info {
            font-size: 20px;
        }

        h2 {
            font-size: 22px;
        }

        h3 {
            font-size: 18px;
        }

        .button {
            padding: 8px 15px;
            font-size: 14px;
        }

        .button-secondary {
            padding: 8px 15px;
            font-size: 14px;
        }

        .transactions-table th,
        .transactions-table td {
            padding: 8px;
            font-size: 13px;
        }

        input[type="number"] {
            padding: 6px;
            font-size: 13px;
        }

        .form-group label {
            font-size: 14px;
        }

        .payment-options label {
            font-size: 13px;
        }
    }

    @media (max-width: 480px) {
        .wallet-section, .add-funds-section {
            padding: 10px;
        }

        .wallet-info {
            font-size: 18px;
        }

        h2 {
            font-size: 20px;
        }

        h3 {
            font-size: 16px;
        }

        .wallet-overview {
            flex-direction: column;
            align-items: flex-start;
            gap: 10px;
        }

        .wallet-actions {
            width: 100%;
            justify-content: space-between;
        }

        .button {
            padding: 6px 10px;
            font-size: 12px;
            width: 48%;
            text-align: center;
        }

        .button-secondary {
            padding: 6px 10px;
            font-size: 12px;
            width: 48%;
            text-align: center;
        }

        .transactions-table th,
        .transactions-table td {
            padding: 6px;
            font-size: 12px;
        }

        input[type="number"] {
            padding: 5px;
            font-size: 12px;
        }

        .form-group label {
            font-size: 13px;
        }

        .payment-options label {
            font-size: 12px;
        }

        .error-message {
            padding: 8px;
            font-size: 12px;
        }
    }
</style>

<div class="container-wrapper">
    <%- include("../../views/layouts/user/sidebar") %>

    <main class="main-content">
        <div class="container">
            <!-- Wallet Section -->
            <div class="wallet-section">
                <div class="wallet-overview">
                    <div class="wallet-info">
                        <h2>Your Wallet Balance: ₹<%= balance.toFixed(2) %></h2>
                    </div>
                    <div class="wallet-actions">
                        <!-- <button class="button">Withdraw</button> -->
                    </div>
                </div>

                <h3>Recent Transactions</h3>
                <div class="transactions-table-container">
                    <table class="transactions-table">
                        <thead>
                            <tr>
                                <th>Date</th>
                                <th>Type</th>
                                <th>Amount</th>
                                <th>Description</th>
                            </tr>
                        </thead>
                        <tbody>
                            <% if (walletHistory && walletHistory.length > 0) { %>
                                <% walletHistory.forEach(transaction => { %>
                                    <tr>
                                        <td><%= new Date(transaction.date).toLocaleDateString() %></td>
                                        <td class="<%= transaction.transactionType === 'credit' ? 'transaction-type' : 'transaction-type-negative' %>">
                                            <%= transaction.transactionType === 'credit' ? 'Credit' : 'Debit' %>
                                        </td>
                                        <td><%= transaction.transactionType === 'credit' ? '+' : '-' %>₹<%= transaction.amount.toFixed(2) %></td>
                                        <td><%= transaction.description %></td>
                                    </tr>
                                <% }); %>
                            <% } else { %>
                                <tr>
                                    <td colspan="4">No transactions found</td>
                                </tr>
                            <% } %>
                        </tbody>
                    </table>
                </div>

                <% if (totalPages > 1) { %>
                    <div style="text-align: center; margin-top: 20px;">
                        <% if (currentPage > 1) { %>
                            <a href="?page=<%= currentPage - 1 %>&limit=<%= limit %>" class="button button-secondary">Previous</a>
                        <% } %>

                        <% for (let i = 1; i <= totalPages; i++) { %>
                            <a href="?page=<%= i %>&limit=<%= limit %>" class="button <%= currentPage === i ? '' : 'button-secondary' %>">
                                <%= i %>
                            </a>
                        <% } %>

                        <% if (currentPage < totalPages) { %>
                            <a href="?page=<%= currentPage + 1 %>&limit=<%= limit %>" class="button button-secondary">Next</a>
                        <% } %>
                    </div>
                <% } %>
            </div>

            <!-- Add Funds Section -->
            <div class="add-funds-section">
                <h3>Add Funds to Wallet</h3>
                <% if (locals.error) { %>
                    <div class="error-message"><%= error %></div>
                <% } %>
                <form action="/addFund" method="POST">
                    <div class="form-group">
                        <label for="amount">Amount to Add (₹)</label>
                        <input type="number" id="amount" name="amount" min="1" step="0.01" required>
                    </div>
                    <div class="form-group">
                        <label>Payment Method</label>
                        <div class="payment-options">
                            <label>
                                <input type="radio" name="paymentMethod" value="Razorpay" checked>
                                Razorpay
                            </label>
                            <!-- Add more payment methods if needed -->
                        </div>
                    </div>
                    <button type="submit" class="button">Add Funds</button>
                </form>
            </div>
        </div>
    </main>
</div>

<script src="https://checkout.razorpay.com/v1/checkout.js"></script>
<script>
    // Handle form submission for Razorpay
    document.querySelector('.add-funds-section form').addEventListener('submit', async (e) => {
        e.preventDefault();

        const amount = document.getElementById('amount').value;
        const paymentMethod = document.querySelector('input[name="paymentMethod"]:checked').value;

        if (paymentMethod === 'Razorpay') {
            try {
                const response = await fetch('/addFund', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ amount, paymentMethod: 'Razorpay' }),
                });

                const data = await response.json();
                if (!data.success) {
                    alert(data.message || 'Failed to initiate payment');
                    return;
                }

                const options = {
                    key: data.razorpayKeyId,
                    amount: data.amount,
                    currency: 'INR',
                    name: 'Elegance Carry',
                    description: 'Add Funds to Wallet',
                    order_id: data.razorpayOrderId,
                    handler: async (response) => {
                        const verifyResponse = await fetch('/walletPayment', {
                            method: 'POST',
                            headers: { 'Content-Type': 'application/json' },
                            body: JSON.stringify({
                                razorpayOrderId: data.razorpayOrderId,
                                razorpayPaymentId: response.razorpay_payment_id,
                                razorpaySignature: response.razorpay_signature,
                                amount: data.amount,
                            }),
                        });
                        const verifyData = await verifyResponse.json();
                        if (verifyData.success) {
                            window.location.reload(); // Refresh to update balance
                        } else {
                            alert('Payment verification failed');
                        }
                    },
                    theme: { color: '#007bff' },
                };

                const razorpayInstance = new Razorpay(options);
                razorpayInstance.open();
            } catch (error) {
                console.error('Error initiating payment:', error);
                alert('Failed to initiate payment');
            }
        }
    });
</script>

<%- include("../layouts/user/footer.ejs") %>