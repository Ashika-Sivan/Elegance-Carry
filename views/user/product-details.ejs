<%- include("../../views/layouts/user/header") %>

<head>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.css">
  <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
  <style>
    body {
      font-family: 'Roboto', sans-serif;
      background-color: #f8f9fa;
    }
    #toast-container > .toast-warning {
  background-color: #ffeeba !important;
  color: black !important;
}

    .breadcrumb-container {
      background-color: #343a40;
      padding: 10px 0;
    }

    .breadcrumb-item a {
      color: #fff;
      text-decoration: none;
    }

    .breadcrumb-item.active {
      color: #adb5bd;
    }

    .product-details-section {
      margin-top: 20px;
    }

    .detail-gallery {
      position: relative;
    }

    .zoom-container {
      position: relative;
    }

    .zoom-lens {
      position: absolute;
      border: 1px solid #ccc;
      background-color: #fff;
      opacity: 0.5;
      pointer-events: none;
      display: none;
    }

    .zoom-result {
      position: fixed;
      top: 20px;
      right: 20px;
      width: 300px;
      height: 300px;
      display: none;
      background-repeat: no-repeat;
      border: 1px solid #ccc;
      z-index: 1000;
    }

    .slider-nav-thumbnails {
      display: flex;
      flex-wrap: wrap;
      gap: 10px;
      margin-top: 10px;
    }

    .thumbnail {
      width: 80px;
      height: 80px;
      overflow: hidden;
      border: 1px solid #ddd;
      cursor: pointer;
      transition: border-color 0.3s;
    }

    .thumbnail:hover {
      border-color: #007bff;
    }

    .thumbnail img {
      width: 100%;
      height: 100%;
      object-fit: cover;
    }

    .product-info {
      padding-left: 20px;
    }

    .product-title {
      font-size: 2.5rem;
      font-weight: 700;
      margin-bottom: 15px;
    }

    .product-meta {
      margin-bottom: 15px;
    }

    .text-brand {
      color: #007bff;
      font-weight: 500;
    }

    .product-price {
      margin-bottom: 20px;
    }

    .sale-price {
      font-size: 2rem;
      color: #b12704;
      font-weight: 700;
    }

    .old-price {
      font-size: 1.2rem;
      color: #777;
      text-decoration: line-through;
    }

    .save-price {
      font-size: 1.2rem;
      color: #1c6758;
    }

    .product-description {
      font-size: 1rem;
      line-height: 1.6;
      margin-bottom: 20px;
    }

    .stock-info {
      margin-bottom: 20px;
    }

    .in-stock {
      color: #28a745;
      font-weight: 500;
    }

    .out-of-stock {
      color: #dc3545;
      font-weight: 500;
    }

    .product-actions {
      display: flex;
      gap: 15px;
      align-items: center;
      margin-bottom: 20px;
    }

    .quantity-controls {
      display: flex;
      align-items: center;
      gap: 5px;
    }

    .quantity-controls button {
      width: 40px;
      height: 40px;
      font-size: 1rem;
    }

    #quantity {
      width: 60px;
      text-align: center;
      font-size: 1rem;
    }

    .delivery-options p {
      margin-bottom: 10px;
    }

    .delivery-options i {
      margin-right: 5px;
    }

    .related-products {
      margin-top: 40px;
    }

    .related-products-grid .product-card {
      transition: transform 0.3s ease, box-shadow 0.3s ease;
      background-color: #fff;
      border: 1px solid #ddd;
      border-radius: 8px;
      overflow: hidden;
    }

    .related-products-grid .product-card:hover {
      transform: scale(1.05);
      box-shadow: 0 4px 12px rgba(0,0,0,0.1);
    }

    .related-products-grid .product-image {
      position: relative;
      overflow: hidden;
    }

    .related-products-grid .product-overlay {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background-color: rgba(0,0,0,0.5);
      color: #fff;
      opacity: 0;
      transition: opacity 0.3s ease;
      display: flex;
      align-items: center;
      justify-content: center;
    }

    .related-products-grid .product-card:hover .product-overlay {
      opacity: 1;
    }

    .related-products-grid .product-overlay button {
      background-color: #007bff;
      border: none;
      padding: 10px 20px;
      font-size: 1rem;
      cursor: pointer;
      border-radius: 5px;
    }

    .related-products-grid .product-info {
      padding: 15px;
    }

    .related-products-grid .product-name {
      font-size: 1.1rem;
      margin-bottom: 10px;
      color: #333;
    }

    .related-products-grid .product-price {
      font-size: 1rem;
      color: #b12704;
    }

    @media (max-width: 1024px) {
      .zoom-result {
        display: none; /* Ensure zoom is disabled on smaller screens */
      }
    }

    @media (max-width: 768px) {
      .product-info {
        padding-left: 0;
        margin-top: 20px;
      }

      .product-title {
        font-size: 2rem;
      }

      .sale-price {
        font-size: 1.8rem;
      }

      .old-price, .save-price {
        font-size: 1rem;
      }

      .product-description {
        font-size: 0.9rem;
      }

      .quantity-controls button {
        width: 35px;
        height: 35px;
      }

      #quantity {
        width: 50px;
      }
    }

    @media (max-width: 576px) {
      .slider-nav-thumbnails {
        justify-content: center;
      }

      .thumbnail {
        width: 60px;
        height: 60px;
      }

      .product-title {
        font-size: 1.8rem;
      }

      .sale-price {
        font-size: 1.6rem;
      }

      .product-actions {
        flex-direction: column;
        align-items: stretch;
      }

      .product-actions button {
        width: 100%;
      }
    }
  </style>
</head>

<body>
  <div class="breadcrumb-container">
    <nav class="bg-dark text-white">
      <ol class="breadcrumb p-3 mb-0">
        <li class="breadcrumb-item"><a href="/">Home</a></li>
        <li class="breadcrumb-item"><a href="/shop?category=<%= product.category._id %>"><%= product.category.name %></a></li>
        <li class="breadcrumb-item active" aria-current="page"><%= product.productName %></li>
      </ol>
    </nav>
  </div>

  <main class="main">
    <section class="container">
      <div class="row product-details-section">
        <!-- Left: Product Images -->
        <div class="col-md-6 detail-gallery">
          <div class="zoom-container">
            <div class="main-image">
              <div class="zoom-lens"></div>
              <figure class="mb-3">
                <img id="currentImage" src="/img/<%= product.productImage[0] %>" 
                     data-zoom-image="/img/<%= product.productImage[0] %>" 
                     alt="Main Product Image"
                     onerror="this.src='/img/default-product.jpg'; console.error('Failed to load main image:', this.src)">
              </figure>
            </div>
            <div class="zoom-result"></div>
          </div>

          <div class="slider-nav-thumbnails d-flex flex-wrap gap-2 mt-3">
            <% product.productImage.forEach((image, index) => { %>
              <div class="thumbnail cursor-pointer"
                   onclick="switchImage('<%= image %>')">
                <img src="/img/<%= image %>" alt="Thumbnail <%= index + 1 %>">
              </div>
            <% }); %>
          </div>
        </div>

        <!-- Right: Product Details -->
        <div class="col-md-6 product-info">
          <h1 class="product-title mb-3"><%= product.productName %></h1>
          <div class="product-meta mb-3">
            <p class="mb-1">Brand: <span class="text-brand"><%= product.brand.name %></span></p>
            <div class="product-rating">
              <span class="stars">⭐⭐⭐⭐☆</span>
              <span class="rating-count">(25 reviews)</span>
            </div>
          </div>
          <div class="product-price mb-4">
            <h2 class="sale-price text-danger">₹<%= product.salePrice.toLocaleString('en-IN') %></h2>
            <p class="old-price text-muted"><del>₹<%= product.regularPrice.toLocaleString('en-IN') %></del></p>
            <p class="save-price text-success">You Save ₹<%= (product.regularPrice - product.salePrice).toLocaleString('en-IN') %></p>
          </div>
          <p class="product-description mb-4"><%= product.description %></p>
          <div class="stock-info mb-4">
            <p><i class="fas fa-box"></i> Availability: 
              <span class="<%= quantity > 0 ? 'in-stock' : 'out-of-stock' %>">
                <%= quantity > 0 ? `${quantity} in stock` : 'Out of Stock' %>
              </span>
            </p>
          </div>
          <div class="product-actions d-flex gap-3 mb-4">
            <div class="quantity-controls d-flex align-items-center">
              <button class="btn btn-outline-secondary" onclick="decreaseQuantity()">-</button>
              <%const maxAllowed = Math.min(3,quantity);%>
              <input id="quantity" type="number" value="1" min="1" max="<%= maxAllowed %>" class="form-control text-center" style="width: 60px;">
              <button class="btn btn-outline-secondary" onclick="increaseQuantity()">+</button>
            </div>
            <button id="add-to-cart" class="btn btn-primary" onclick="addToCart('<%= product._id %>')">
              Add to Cart <i class="fas fa-shopping-cart"></i>
            </button>
            <button class="btn btn-outline-danger" onclick="addToFavorites()">
              Wishlist <i class="fas fa-heart"></i>
            </button>
          </div>
          <div class="delivery-options">
            <p><i class="fas fa-truck"></i> Delivery: <span class="delivery-date">Delivered by <%= new Date().toLocaleDateString('en-IN', { day: 'numeric', month: 'short', year: 'numeric' }) %></span></p>
            <p><i class="fas fa-info-circle"></i> Free delivery available on orders over ₹500</p>
          </div>
        </div>
      </div>

      <!-- Related Products -->
      <section class="related-products mt-5">
        <h2 class="text-center mb-4">Related Products</h2>
        <div class="related-products-grid row row-cols-1 row-cols-md-3 row-cols-lg-4 g-4">
          <% if (relatedProducts && relatedProducts.length > 0) { %>
            <% relatedProducts.forEach(related => { %>
              <% if (related && related.productImage && related.productImage.length > 0) { %>
                <div class="col">
                  <a href="/productDetails?id=<%= related._id %>" class="product-card h-100 text-decoration-none">
                    <div class="product-image position-relative">
                      <img src="/img/<%= related.productImage[0] %>" alt="<%= related.productName %>" class="img-fluid" onerror="this.src='/img/default-product.jpg'">
                      <div class="product-overlay d-flex align-items-center justify-content-center">
                        <button class="btn btn-primary">View Details</button>
                      </div>
                    </div>
                    <div class="product-info p-3">
                      <h5 class="product-name mb-2"><%= related.productName %></h5>
                      <p class="product-price mb-0">
                        ₹<%= related.salePrice ? related.salePrice.toLocaleString('en-IN') : 'Price not available' %>
                      </p>
                    </div>
                  </a>
                </div>
              <% } %>
            <% }); %>
          <% } else { %>
            <div class="col-12 text-center">
              <p>No related products found</p>
            </div>
          <% } %>
        </div>
      </section>
    </section>
  </main>

  <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

  <script>
    function changeMainImage(image) {
      document.getElementById("main-image").src = `/img/${image}`;
    }

    function increaseQuantity() {
      const quantityInput = document.getElementById("quantity");
      const maxQuantity = parseInt(quantityInput.max);
      const currentQuantity = parseInt(quantityInput.value);
      const stockQuantity = <%= quantity %>;

      if (stockQuantity === 0) {
        Swal.fire({
          icon: 'error',
          title: 'Out of Stock!',
          text: 'Product is out of stock!',
          confirmButtonColor: '#ff3f6c'
        });
        return;
      }

      if (currentQuantity < maxQuantity) {
        quantityInput.value = currentQuantity + 1;
      } else {
        toastr.warning('Maximum available quantity reached');
      }
    }



    function decreaseQuantity() {
      const quantityInput = document.getElementById("quantity");
      if (parseInt(quantityInput.value) > 1) {
        quantityInput.value = parseInt(quantityInput.value) - 1;
      }
    }

    function addToCart(productId) {
      const quantity = parseInt(document.getElementById("quantity").value);
      console.log("Sending product ID:", productId, "Quantity:", quantity);
      
      fetch('/cart', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({ productId, quantity }) 
      })
      .then(response => response.json())
      .then(data => {
        console.log("Response from server:", data);
        if (data.success) {  
          Swal.fire('Added!', 'The item has been added to your cart.', 'success');
        } else {
          Swal.fire('Error!', data.message, 'error');
        }
      })
      .catch(error => {
        console.error('Error:', error);
        Swal.fire('Error!', 'An error occurred while adding the item to your cart.', 'error');
      });
    }

    function buyNow() {
      alert("Redirecting to checkout...");
    }

    function addToFavorites() {
      const productId = '<%= product._id %>';

      fetch('/wishlist', {
        method: 'PATCH',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({ productId })
      })
      .then(response => response.json())
      .then(data => {
        if (data.success) {
          Swal.fire({
            title: data.action === 'added' ? 'Added!' : 'Removed!',
            text: data.message,
            icon: 'success',
            confirmButtonColor: '#ff3f6c'
          });
        } else {
          if (data.redirectToLogin) {
            Swal.fire({
              title: 'Error!',
              text: data.message,
              icon: 'error',
              confirmButtonColor: '#ff3f6c'
            }).then(() => {
              window.location.href = '/login';
            });
          } else {
            Swal.fire({
              title: 'Error!',
              text: data.message,
              icon: 'error',
              confirmButtonColor: '#ff3f6c'
            });
          }
        }
      })
      .catch(error => {
        console.error('Error:', error);
        Swal.fire({
          title: 'Error!',
          text: 'An error occurred while updating your wishlist.',
          icon: 'error',
          confirmButtonColor: '#ff3f6c'
        });
      });
    }
  </script>

  <script>
    document.addEventListener('DOMContentLoaded', function() {
      console.log('Zoom script initialized');

      const mainImage = document.getElementById('currentImage');
      const zoomContainer = document.querySelector('.zoom-container');
      const zoomLens = document.querySelector('.zoom-lens');
      const zoomResult = document.querySelector('.zoom-result');

      if (!mainImage || !zoomContainer || !zoomLens || !zoomResult) {
        console.error('Zoom elements missing:', { mainImage, zoomContainer, zoomLens, zoomResult });
        return;
      }

      console.log('Initial image source:', mainImage.src);

      function initializeZoom() {
        if (!mainImage.complete || mainImage.naturalWidth === 0) {
          console.error('Main image failed to load:', mainImage.src);
          return false;
        }
        console.log('Main image loaded successfully:', mainImage.src);
        return true;
      }

      const lensWidth = 100;
      const lensHeight = 100;
      const resultWidth = 300;
      const resultHeight = 300;

      zoomLens.style.width = `${lensWidth}px`;
      zoomLens.style.height = `${lensHeight}px`;
      zoomResult.style.width = `${resultWidth}px`;
      zoomResult.style.height = `${resultHeight}px`;

      function calculateZoom(e) {
        if (!initializeZoom()) return;

        const rect = mainImage.getBoundingClientRect();
        const x = e.clientX - rect.left;
        const y = e.clientY - rect.top;

        console.log('Mouse position:', { x, y });

        let lensLeft = x - (lensWidth / 2);
        let lensTop = y - (lensHeight / 2);

        lensLeft = Math.max(0, Math.min(lensLeft, mainImage.offsetWidth - lensWidth));
        lensTop = Math.max(0, Math.min(lensTop, mainImage.offsetHeight - lensHeight));

        zoomLens.style.left = `${lensLeft}px`;
        zoomLens.style.top = `${lensTop}px`;

        const xRatio = resultWidth / lensWidth;
        const yRatio = resultHeight / lensHeight;

        zoomResult.style.backgroundImage = `url(${mainImage.src})`;
        zoomResult.style.backgroundSize = `${mainImage.offsetWidth * xRatio}px ${mainImage.offsetHeight * yRatio}px`;
        zoomResult.style.backgroundPosition = `-${lensLeft * xRatio}px -${lensTop * yRatio}px`;
      }

      function showZoom() {
        if (window.innerWidth < 1024) {
          console.log('Zoom disabled on mobile (screen width < 1024px)');
          return;
        }

        if (!initializeZoom()) return;

        console.log('Showing zoom');
        zoomLens.style.display = 'block';
        zoomResult.style.display = 'block';
      }

      function hideZoom() {
        console.log('Hiding zoom');
        zoomLens.style.display = 'none';
        zoomResult.style.display = 'none';
      }

      zoomContainer.addEventListener('mouseenter', (e) => {
        console.log('Mouse entered zoom container');
        showZoom();
      });

      zoomContainer.addEventListener('mouseleave', (e) => {
        console.log('Mouse left zoom container');
        hideZoom();
      });

      zoomContainer.addEventListener('mousemove', (e) => {
        console.log('Mouse moved in zoom container');
        calculateZoom(e);
      });

      window.switchImage = function(imageName) {
        const imagePath = `/img/${imageName}`;
        console.log('Switching image to:', imagePath);
        mainImage.src = imagePath;
        mainImage.dataset.zoomImage = imagePath;
        hideZoom();

        mainImage.onload = function() {
          console.log('New image loaded:', imagePath);
          if (zoomLens.style.display === 'block') {
            showZoom();
          }
        };
        mainImage.onerror = function() {
          console.error('Failed to load new image:', imagePath);
        };
      };

      window.addEventListener('resize', function() {
        if (window.innerWidth < 1024) {
          hideZoom();
        }
      });

      if (window.innerWidth < 1024) {
        hideZoom();
      } else {
        initializeZoom();
      }
    });
  </script>

  <%- include("../../views/layouts/user/footer") %>
</body>
</html>