<%- include("../../views/layouts/user/header") %>


<div class="breadcrumb-container">
  <nav class="bg-dark text-white">
      <ol class="breadcrumb">
          <li class="breadcrumb-item"><a href="/">Home</a></li>
          <li class="breadcrumb-item"><a href="/shop?category=<%= product.category._id %>"><%= product.category.name %></a></li>
          <li class="breadcrumb-item active" aria-current="page"><%= product.productName %></li>
          <!-- <li class="breadcrumb-item active" aria-current="page">/Product-Details</li> -->
      </ol>
  </nav>
</div>

  <main class="main">
    <section class="mt-50 mb-50">
      <div class="container">
        <div class="row">
          <div class="col-md-6">
            <div class="detail-gallery">
                <div class="zoom-container" style="position: relative; overflow: hidden;">
                    <div class="main-image" style="position: relative;">
                        <div class="zoom-lens" style="position: absolute; display: none; width: 100px; height: 100px; border: 1px solid #000; opacity: 0.4; background-color: #fff;"></div>
                        <figure class="border-radius-10 mb-3">
                            <img id="currentImage" src="/img/<%= product.productImage[0] %>" 
                                data-zoom-image="/img/<%= product.productImage[0] %>" 
                                alt="Main Product Image" 
                                style="object-fit: contain; width: 100%; max-height: 500px;">
                        </figure>
                    </div>
                    <div class="zoom-result" style="display: none; position: absolute; width: 300px; height: 300px; border: 1px solid #000; background-repeat: no-repeat; background-size: contain;"></div>
                </div>
        
                <div class="slider-nav-thumbnails d-flex flex-wrap gap-2 mt-2">
                    <% product.productImage.forEach((image, index) => { %>
                        <div class="thumbnail cursor-pointer hover:opacity-80"
                            onclick="switchImage('<%= image %>')"
                            style="border: 1px solid #ddd; border-radius: 4px; padding: 2px;">
                            <img src="/img/<%= image %>" alt="Thumbnail <%= index + 1 %>" 
                                style="object-fit: contain; width: 60px; height: 60px;">
                        </div>
                    <% }); %>
                </div>
            </div>
        </div>


          <!-- Center: Product Details -->
          <div class="col-md-6">
            <h1 class="product-title">
              <%= product.productName %>
            </h1>
            <div class="product-meta">
              <p>Brand: <span class="text-brand">
                  <%= product.brand.name %>
                </span></p>
              <div class="product-rating">
                <span class="stars">⭐⭐⭐⭐☆</span>
                <span class="rating-count">(25 reviews)</span>
              </div>
            </div>
            <div class="product-price">
              <h2>₹<%= product.salePrice.toLocaleString('en-IN') %>
              </h2>
              <p class="old-price">₹<%= product.regularPrice.toLocaleString('en-IN') %>
              </p>
              <p class="save-price">You Save ₹<%= (product.regularPrice - product.salePrice).toLocaleString('en-IN') %>
              </p>
            </div>
            <p class="product-description">
              <%= product.description %>
            </p>

            <div class="stock-info">
              <p>Availability: <span class="in-stock">
                  <%= quantity %> in stock
                </span></p>
            </div>
            <%if(quantity==0){%>
              <span class="text-danger">Out Of Stock</span>
              <%}%>

            <div class="product-actions">
              <div class="quantity-controls">
                <button onclick="decreaseQuantity()">-</button>
                <input id="quantity" type="number" value="1" min="1" max="3">
                <button onclick="increaseQuantity()">+</button>
              </div>
              <button id="add-to-cart" class="btn btn-primary" onclick="addToCart('<%=product._id%>')">Add to Cart</button>
              <!-- <button class="btn btn-secondary" onclick="buyNow()">Buy Now</button> -->
              <button class="btn btn-rounded-pill" onclick="addToFavorites()">wish List❤️</button>
            </div>

            <div class="delivery-options">
              <p>Delivery: <span class="delivery-date">Delivered by <%= new Date().toLocaleDateString('en-IN', {
                    day: 'numeric' , month: 'short' , year: 'numeric' }) %></span></p>
              <p>Free delivery available on orders over ₹500</p>
            </div>
          </div>
        </div>

        <!-- Customer Reviews Section -->
        <div class="row mt-5">
          <div class="col-12">
              <div class="card">
                  <div class="card-header bg-light">
                      <h3 class="mb-0">Customer Reviews</h3>
                  </div>
                  <div class="card-body">
                      <div class="row">
                          <div class="col-lg-4">
                              <div class="overall-rating mb-4">
                                  <div class="display-4">4.0</div>
                                  <div class="stars mb-2">
                                      <% for(let i=0; i<5; i++) { %>
                                          <span style="color: #ffa41c;">★</span>
                                          <% } %>
                                  </div>
                                  <div class="text-muted">Based on 303 reviews</div>
                              </div>
                          </div>
                          <div class="col-lg-8">
                              <div class="reviews-list">
                                  <div class="review mb-4 pb-4 border-bottom">
                                      <div class="review-header">
                                          <span class="reviewer-name fw-bold">Belwin</span>
                                          <div class="stars">
                                              <% for(let i=0; i<4; i++) { %>
                                                  <span style="color: #ffa41c;">★</span>
                                                  <% } %>
                                                      <span style="color: #ddd;">★</span>
                                          </div>
                                      </div>
                                      <div class="review-date text-muted mb-2">Reviewed on March 12, 2024</div>
                                      <div class="review-content">
                                          Great product! Exceeded my expectations in every way. Highly
                                          recommended!
                                      </div>
                                  </div>
                                  <div class="review">
                                      <div class="review-header">
                                          <span class="reviewer-name fw-bold">Devan</span>
                                          <div class="stars">
                                              <% for(let i=0; i<5; i++) { %>
                                                  <span style="color: #ffa41c;">★</span>
                                                  <% } %>
                                          </div>
                                      </div>
                                      <div class="review-date text-muted mb-2">Reviewed on February 28, 2024</div>
                                      <div class="review-content">
                                          Good value for money. Will buy again!
                                      </div>
                                  </div>
                              </div>
                          </div>
                      </div>
                  </div>
              </div>
          </div>
      </div>



        <section class="related-products">
          <h2>Related Products</h2>
          <div class="related-products-grid">
            <% if (relatedProducts && relatedProducts.length> 0) { %>
              <% relatedProducts.forEach(related=> { %>
                <% if (related && related.productImage && related.productImage.length> 0) { %>
                  <div class="product-card">
                    <img src="/img/<%= related.productImage[0] %>" alt="<%= related.productName %>"
                      onerror="this.src='/img/default-product.jpg'">
                    <h5>
                      <a href="/productDetails?id=<%= related._id %>">
                        <%= related.productName %>
                      </a>
                    </h5>
                    <p>₹<%= related.salePrice ? related.salePrice.toLocaleString('en-IN') : 'Price not available' %>
                    </p>
                  </div>
                  <% } %>
                    <% }); %>
                      <% } else { %>
                        <p>No related products found</p>
                        <% } %>
          </div>
        </section>
      </div>
    </section>
  </main>

  <%- include("../../views/layouts/user/footer") %>


    <!-- Include Medium Zoom Script -->
    <script src="https://cdn.jsdelivr.net/npm/medium-zoom/dist/medium-zoom.min.js"></script>
   
    <script>
      function changeMainImage(image) {
        document.getElementById("main-image").src = `/img/${image}`;
      }

  function increaseQuantity() {
  const quantityInput = document.getElementById("quantity");
  const maxQuantity = parseInt(quantityInput.max);
  const currentQuantity = parseInt(quantityInput.value);
  
  if (currentQuantity < maxQuantity) {
    quantityInput.value = currentQuantity + 1;
  } else {
    // Optionally show a message that max quantity is reached
    toastr.warning('Maximum available quantity reached');
  }
}

      function decreaseQuantity() {
        const quantityInput = document.getElementById("quantity");
        if (parseInt(quantityInput.value) > 1) {
          quantityInput.value = parseInt(quantityInput.value) - 1;
        }
      }

      // function addToCart() {
        // alert("Product added to cart!");
      // }

      function addToCart(productId) {
  const quantity = parseInt(document.getElementById("quantity").value);
  console.log("Sending product ID:", productId, "Quantity:", quantity);
  
  fetch('/cart', {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json'
    },
    body: JSON.stringify({ productId, quantity }) 
  })
  .then(response => response.json())
  .then(data => {
    console.log("Response from server:", data);
    if (data.success) {  
      Swal.fire('Added!', 'The item has been added to your cart.', 'success');
    } else {
      Swal.fire('Error!', data.message, 'error');
    }
  })
  .catch(error => {
    console.error('Error:', error);
    Swal.fire('Error!', 'An error occurred while adding the item to your cart.', 'error');
  });
}
function buyNow() {
        alert("Redirecting to checkout...");
      }


function addToFavorites() {
    const productId = '<%= product._id %>'; // Get the product ID from the EJS variable

    fetch('/wishlist', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json'
        },
        body: JSON.stringify({ productId })
    })
    .then(response => response.json())
    .then(data => {
        if (data.success) {
            Swal.fire({
                title: data.action === 'added' ? 'Added!' : 'Removed!',
                text: data.message,
                icon: 'success',
                confirmButtonColor: '#ff3f6c'
            });
        } else {
            if (data.redirectToLogin) {
                Swal.fire({
                    title: 'Error!',
                    text: data.message,
                    icon: 'error',
                    confirmButtonColor: '#ff3f6c'
                }).then(() => {
                    window.location.href = '/login';
                });
            } else {
                Swal.fire({
                    title: 'Error!',
                    text: data.message,
                    icon: 'error',
                    confirmButtonColor: '#ff3f6c'
                });
            }
        }
    })
    .catch(error => {
        console.error('Error:', error);
        Swal.fire({
            title: 'Error!',
            text: 'An error occurred while updating your wishlist.',
            icon: 'error',
            confirmButtonColor: '#ff3f6c'
        });
    });
}

    </script>
<script>
document.addEventListener('DOMContentLoaded', function() {
    const mainImage = document.getElementById('currentImage');
    const zoomContainer = document.querySelector('.zoom-container');
    const zoomLens = document.querySelector('.zoom-lens');
    const zoomResult = document.querySelector('.zoom-result');

    // Calculate zoom
    function calculateZoom(e) {
        // Get cursor position
        const rect = mainImage.getBoundingClientRect();
        const x = e.clientX - rect.left;
        const y = e.clientY - rect.top;

        // Calculate lens position
        let lensLeft = x - (zoomLens.offsetWidth / 2);
        let lensTop = y - (zoomLens.offsetHeight / 2);

        // Prevent lens from going outside image
        lensLeft = Math.max(0, Math.min(lensLeft, mainImage.offsetWidth - zoomLens.offsetWidth));
        lensTop = Math.max(0, Math.min(lensTop, mainImage.offsetHeight - zoomLens.offsetHeight));

        // Position lens
        zoomLens.style.left = `${lensLeft}px`;
        zoomLens.style.top = `${lensTop}px`;

        // Calculate zoom ratios
        const xRatio = zoomResult.offsetWidth / zoomLens.offsetWidth;
        const yRatio = zoomResult.offsetHeight / zoomLens.offsetHeight;

        // Update zoom result
        zoomResult.style.backgroundImage = `url(${mainImage.src})`;
        zoomResult.style.backgroundSize = `${mainImage.offsetWidth * xRatio}px ${mainImage.offsetHeight * yRatio}px`;
        zoomResult.style.backgroundPosition = `-${lensLeft * xRatio}px -${lensTop * yRatio}px`;
    }

    // Show zoom
    function showZoom() {
        if (window.innerWidth >= 1024) {
            zoomLens.style.display = 'block';
            zoomResult.style.display = 'block';
            
            // Ensure zoom result is visible
            const containerRight = zoomContainer.getBoundingClientRect().right;
            const windowWidth = window.innerWidth;
            
            if (containerRight + zoomResult.offsetWidth > windowWidth) {
                zoomResult.style.left = 'auto';
                zoomResult.style.right = '100%';
                zoomResult.style.marginLeft = '0';
                zoomResult.style.marginRight = '20px';
            }
        }
    }

    // Hide zoom
    function hideZoom() {
        zoomLens.style.display = 'none';
        zoomResult.style.display = 'none';
    }

    // Event listeners
    zoomContainer.addEventListener('mouseenter', showZoom);
    zoomContainer.addEventListener('mouseleave', hideZoom);
    zoomContainer.addEventListener('mousemove', calculateZoom);

    // Update switchImage function
    window.switchImage = function(imageName) {
        const imagePath = `/img/${imageName}`;
        mainImage.src = imagePath;
        mainImage.dataset.zoomImage = imagePath;
        
        // Hide zoom elements when switching images
        hideZoom();
    };

    // Handle window resize
    window.addEventListener('resize', function() {
        if (window.innerWidth < 1024) {
            hideZoom();
        }
    });
});
</script>
    <style>
.detail-gallery {
    position: relative;
    max-width: 100%;
}

.zoom-container {
    position: relative;
    overflow: visible !important; /* Changed from hidden to visible */
}

.main-image {
    width: 100%;
    position: relative;
}

.zoom-lens {
    position: absolute;
    width: 100px;
    height: 100px;
    border: 2px solid #ccc;
    background-color: rgba(255, 255, 255, 0.4);
    cursor: crosshair;
    display: none;
}

.zoom-result {
    position: absolute;
    top: 0;
    left: 100%; /* Position right next to the image */
    width: 400px;
    height: 400px;
    border: 1px solid #ddd;
    background-color: white;
    display: none;
    z-index: 1000;
    margin-left: 20px; /* Add some space between image and zoom result */
}

/* Ensure the main product image has proper dimensions */
#currentImage {
    max-width: 100%;
    height: auto;
    display: block;
}


    .related-products {
      margin-top: 50px;
    }

    .related-products-grid {
      display: flex;
      flex-wrap: wrap;
      gap: 20px;
      justify-content: center;
    }

    .product-card {
      width: 200px;
      text-align: center;
      border: 1px solid #ddd;
      padding: 10px;
      border-radius: 8px;
      transition: box-shadow 0.3s;
    }

    .product-card:hover {
      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    }

    .product-card img {
      width: 100%;
      height: 150px;
      object-fit: cover;
    }

    /* General Layout */
    .main {
        padding: 20px;
      }

      .detail-gallery {
        text-align: center;
      }

      .main-image {
        max-width: 100%;
        height: auto;
        /* Ensures proper scaling */
        border-radius: 8px;
        cursor: zoom-in;
        /* Adds a visual indicator for zoom */
      }


      .slider-nav-thumbnails {
        display: flex;
        gap: 10px;
        justify-content: center;
      }

      .thumbnail-image {
        width: 60px;
        height: 60px;
        object-fit: contain;
        border: 1px solid #ddd;
        cursor: pointer;
        border-radius: 4px;
      }

      .thumbnail-image:hover {
        border-color: #007bff;
      }

      /* Product Details */
      .product-title {
        font-size: 24px;
        font-weight: bold;
        margin-bottom: 10px;
      }

      .product-meta {
        margin-bottom: 15px;
      }

      .product-rating {
        margin: 10px 0;
      }

      .product-rating .stars {
        color: #ffcc00;
      }

      .product-price {
        margin: 20px 0;
      }

      .old-price {
        text-decoration: line-through;
        color: #999;
      }

      .save-price {
        color: #ff0000;
      }

      .product-description {
        margin: 20px 0;
      }

      .stock-info {
        margin: 20px 0;
        color: #28a745;
      }

      /* Actions */
      .product-actions {
        display: flex;
        align-items: center;
        gap: 20px;
        margin-top: 20px;
      }

      .quantity-controls {
        display: flex;
        align-items: center;
      }

      .quantity-controls button {
        padding: 5px 10px;
        font-size: 16px;
      }

      .quantity-controls input {
        width: 50px;
        text-align: center;
      }

      .btn {
        padding: 10px 20px;
        border: none;
        cursor: pointer;
        border-radius: 5px;
      }

      .btn-primary {
        background-color: #007bff;
        color: #fff;
      }

      .btn-secondary {
        background-color: #28a745;
        color: #fff;
      }

      /* Delivery Options */
      .delivery-options {
        margin: 20px 0;
      }

      .delivery-date {
        font-weight: bold;
      }
      .detail-gallery{
        border: 1px solid rgb(161, 161, 198);
      }
      .disabled {
            background-color: gray;
            cursor: not-allowed;
      }                      
  </style>

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.css">
<script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
